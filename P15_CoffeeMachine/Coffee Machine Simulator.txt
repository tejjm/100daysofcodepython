Coffee Machine Simulator – Python Project

A simple command-line coffee machine simulator built in Python. It handles user orders for espresso, latte, or cappuccino, processes payments with US coins, checks ingredient availability, and provides change. Developed as part of my #100DaysOfCode challenge.

Features

Supports three coffee types with predefined costs and ingredient requirements

Processes payments using quarters, dimes, nickels, and pennies

Checks pantry stock (water, milk, coffee) before making a drink

Calculates and returns change if overpaid

Generates a report of current pantry and earnings

Turns off the machine with an "off" command

How It Works

Displays a logo and prompts the user for their coffee choice (espresso/latte/cappuccino).

Checks if sufficient ingredients are available in the pantry dictionary.

Asks for coin inputs and calculates the total payment.

If payment is sufficient, deducts ingredients, adds to earnings, and dispenses the coffee (with change if needed).

If payment is insufficient, refunds the money.

Continues running until "off" is entered or ingredients run out.

Getting Started

Ensure additional_data.py (with MENU dictionary) and art.py (for logo) are in the same folder.

Save the script as main.py.


What I Practiced & Learned

Accessing and updating nested dictionaries for ingredients and costs

Handling user inputs and conditional logic for payments and stock checks

Implementing loops for continuous machine operation

Basic error handling for insufficient funds or ingredients

File Structure

CoffeeMachineSimulator/
├── additional_data.py (MENU data)
├── art.py (logo graphic)
├── main.py

 